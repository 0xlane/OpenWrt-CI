name: AX6-6.1-openwrt

on: 
  repository_dispatch:
  workflow_dispatch:
    inputs:
      ssh:
        description: 'SSH connection to Actions'
        required: false
        default: 'false'
        
#权限
permissions: write-all        

env:
  GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
  #编译平台，X64包含X86
  OWRT_TARGET: Redmi-AX6-openwrt
  #默认主题
  OWRT_THEME: material
  #默认主机名
  OWRT_NAME: Redmi-AX6
  #默认源码
  OWRT_URL: https://github.com/rmoyulong/openwrt
  #默认密码，仅作展示，更改无效
  OWRT_PW: password
  OWRT_IP: 192.168.123.1
  #USE_CACHEWRTBUILD: true
  REPO_BRANCH: master
  FEEDS_CONF: feeds.conf.default
  CONFIG_FILE: Ax6-6.1-openwrt.config
  DIY_P1_SH: diy-part1.sh
  DIY_P2_SH: diy-part2-ext.sh
  FILE_NAME: Redmi-AX6-openwrt
  PRODUCT_NAME: Redmi-AX6-openwrt
  
  
jobs:
  AX6-61-openwrt:
    runs-on: ubuntu-latest
    steps:
    - name: 项目检查
      uses: actions/checkout@main

    - name: 初始化编译环境
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        docker rmi $(docker images -q)
        sudo -E rm -rf $(cat $GITHUB_WORKSPACE/Depends.txt | sed -n "1{s/\r$//;p;q}")
        sudo -E apt -yqq update
        sudo -E apt -yqq purge $(cat $GITHUB_WORKSPACE/Depends.txt | sed -n "2{s/\r$//;p;q}")
        sudo -E apt -yqq full-upgrade
        sudo -E apt -yqq install $(cat $GITHUB_WORKSPACE/Depends.txt | sed -n "3{s/\r$//;p;q}")
        sudo -E apt -yqq autoremove --purge
        sudo -E apt -yqq autoclean
        sudo -E apt -yqq clean
        sudo -E systemctl daemon-reload
        sudo -E timedatectl set-timezone "Asia/Shanghai"
        sudo mkdir -p /workdir
        sudo chown $USER:$GROUPS /workdir

    - name: 初始化变量
      run: |
        export OWRT_DATE=$(TZ=UTC-8 date +"%y.%m.%d_%H.%M.%S")
        export OWRT_SOURCE=$(echo $OWRT_URL | cut -d '/' -f 5-)
        export OWRT_TYPE="cortex-a53"

        echo "OWRT_SOURCE=$OWRT_SOURCE" >> $GITHUB_ENV
        echo "OWRT_TARGET=$OWRT_TARGET" >> $GITHUB_ENV
        echo "OWRT_DATE=$OWRT_DATE" >> $GITHUB_ENV
        echo "OWRT_TYPE=$OWRT_TYPE" >> $GITHUB_ENV
        echo "OWRT_PW=$OWRT_PW" >> $GITHUB_ENV
        echo "OWRT_IP=$OWRT_IP" >> $GITHUB_ENV        
        
    - name: 克隆源码库
      working-directory: /workdir
      run: |
        df -hT $PWD
        #git clone $OWRT_URL -b $REPO_BRANCH openwrt
        git clone $OWRT_URL openwrt
        ln -sf /workdir/openwrt $GITHUB_WORKSPACE/openwrt
        [ -e $GITHUB_WORKSPACE/$CONFIG_FILE ] && echo "DEVICE_NAME=$(grep '^CONFIG_TARGET_.*_.*_DEVICE_.*=y' $GITHUB_WORKSPACE/$CONFIG_FILE | sed -r 's/.*DEVICE_(.*)=y/\1/')" >> $GITHUB_ENV
          
    - name: 加载和更新订阅源
      run: |
        cd openwrt
        echo 'src-git mo_ssr https://github.com/rmoyulong/small-package' >>feeds.conf.default
        echo "COMMIT_HASH=$(git rev-parse HEAD)" >> $GITHUB_ENV
        
    - name: 启动缓存[第二次起生效]
      uses: rmoyulong/cachewrtbuild@main
      with:
        ccache: 'true'
        prefix: ${{ github.workspace }}/openwrt
        mixkey: ${{ env.OWRT_URL }}/tree/${{ env.REPO_BRANCH }}?device=${{ env.DEVICE_NAME }}        
        
    - name: 更新订阅源
      run: |
        cd openwrt

        ./scripts/feeds update -a
        ./scripts/feeds install -a
          
    - name: 检查脚本
      run: |
        cd ./Scripts

        dos2unix ./*.sh
        chmod +x ./*.sh           

    - name: 自定义脚本
      run: |
        cd openwrt
   
        #chmod +x $GITHUB_WORKSPACE/$DIY_P2_SH && $GITHUB_WORKSPACE/$DIY_P2_SH
        
        #cd ./package

        #$GITHUB_WORKSPACE/Scripts/Plugins.sh
        #SSH欢迎界面等设置
        $GITHUB_WORKSPACE/Scripts/Settings.sh
       
    - name: 自定义设置
      run: |
        #[ -e files ] && mv files openwrt/files
        cd openwrt

        rm -rf ./tmp* ./.config*
        #make dirclean
        [ -e $GITHUB_WORKSPACE/$CONFIG_FILE ] && mv $GITHUB_WORKSPACE/$CONFIG_FILE .config
        make defconfig
      
    - name: 下载编译依赖
      working-directory: ./openwrt
      run: |
        #make download -j$(nproc)
        #make download -j8
        make -j16 download
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;

    - name: 编译固件
      working-directory: ./openwrt
      run: |     
        echo -e "$(nproc) thread compile"
        make -j$(nproc) || make -j1 || make -j1 V=s
        echo "status=success" >> $GITHUB_OUTPUT
        echo "FILE_DATE=_$(date +"%Y%m%d%H%M")" >> $GITHUB_ENV
        
    - name: 整理固件
      run: |
        cd openwrt && mkdir ./upload

        rm -rf $(find ./bin/targets/ -iregex ".*\(json\|manifest\|buildinfo\|sha256sums\|packages\)$")
        cp -rf $(find ./bin/targets/ -type f -iname "*.*") ./upload/
        cp -rf ./.config ./upload/Config_"$OWRT_TARGET"_"$OWRT_SOURCE"_"$OWRT_DATE".txt

        cd ./upload

        $GITHUB_WORKSPACE/Scripts/Renames.sh

    - name: 生成固件标签
      uses: softprops/action-gh-release@master
      with:
        tag_name: ${{env.OWRT_TARGET}}_${{env.OWRT_SOURCE}}_${{env.OWRT_DATE}}
        files: openwrt/upload/*.*
        body: |
         这个是作者自用设备固件！
         如果需要就拿去使用！

         源码：${{env.OWRT_SOURCE}}
         平台：${{env.OWRT_TARGET}}
         设备：${{env.OWRT_TYPE}}
         密码：${{env.OWRT_PW}}
         地址：${{env.OWRT_IP}}
         内核：6.1.x
        
    - name: 清理Releases
      uses: dev-drprasad/delete-older-releases@master
      with:
        keep_latest: 6
        delete_tags: true

    - name: 清理Workflows
      uses: Mattraks/delete-workflow-runs@main
      with:
        retain_days: 0
        keep_minimum_runs: 1