#
# Copyright (c) 2019-2020 P3TERX <https://p3terx.com>
#
# This is free software, licensed under the MIT License.
# See /LICENSE for more information.
#
# https://github.com/P3TERX/Actions-OpenWrt
# Description: Build OpenWrt using GitHub Actions
#

name: OpenWrt-AX6-immortalwrt (6.1)

on:
  repository_dispatch:
  workflow_dispatch:
    inputs:
      ssh:
        description: 'SSH connection to Actions'
        required: false
        default: 'false'
#权限
permissions: write-all        

env:
  GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
  #编译平台，X64包含X86
  OWRT_TARGET: Redmi-AX6
  #默认主题
  OWRT_THEME: design
  #默认主机名
  OWRT_NAME: Redmi-AX6
  #默认源码
  OWRT_URL: https://github.com/immortalwrt/immortalwrt
  #默认密码，仅作展示，更改无效
  OWRT_PW: password
  OWRT_IP: 192.168.31.1
  USE_CACHEWRTBUILD: true

jobs:
  AX6-immortalwrt_61:
    runs-on: ubuntu-latest
    steps:
      - name: 项目检查
        uses: actions/checkout@main

      - name: 初始化编译环境
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          docker rmi $(docker images -q)
          sudo -E rm -rf $(cat $GITHUB_WORKSPACE/Depends.txt | sed -n "1{s/\r$//;p;q}")
          sudo -E apt -yqq update
          sudo -E apt -yqq purge $(cat $GITHUB_WORKSPACE/Depends.txt | sed -n "2{s/\r$//;p;q}")
          sudo -E apt -yqq full-upgrade
          sudo -E apt -yqq install $(cat $GITHUB_WORKSPACE/Depends.txt | sed -n "3{s/\r$//;p;q}")
          sudo -E apt -yqq autoremove --purge
          sudo -E apt -yqq autoclean
          sudo -E apt -yqq clean
          sudo -E systemctl daemon-reload
          sudo -E timedatectl set-timezone "Asia/Shanghai"

      - name: 初始化变量
        run: |
          export OWRT_DATE=$(TZ=UTC-8 date +"%y.%m.%d_%H.%M.%S")
          export OWRT_SOURCE=$(echo $OWRT_URL | cut -d '/' -f 5-)
          export OWRT_TYPE=$(sed -n "1{s/^#//;s/\r$//;p;q}" $GITHUB_WORKSPACE/Config/$OWRT_TARGET.txt)

          echo "OWRT_SOURCE=$OWRT_SOURCE" >> $GITHUB_ENV
          echo "OWRT_TARGET=$OWRT_TARGET" >> $GITHUB_ENV
          echo "OWRT_DATE=$OWRT_DATE" >> $GITHUB_ENV
          echo "OWRT_TYPE=$OWRT_TYPE" >> $GITHUB_ENV
          echo "OWRT_PW=$OWRT_PW" >> $GITHUB_ENV
          echo "OWRT_IP=$OWRT_IP" >> $GITHUB_ENV

      - name: 检查脚本
        run: |
          cd ./Scripts

          dos2unix ./*.sh
          chmod +x ./*.sh

      - name: 克隆源码库
        run: |
          git clone $OWRT_URL ./owrt
      
      - name: 加载自定义订阅源
        run: |
          cd ./owrt
          echo 'src-git mo_ssr https://github.com/rmoyulong/small-package' >>feeds.conf.default

      - name: 更新订阅源
        run: |
          cd ./owrt

          ./scripts/feeds update -a
          ./scripts/feeds install -a

      - name: 自定义脚本
        run: |
          cd ./owrt

          $GITHUB_WORKSPACE/Scripts/Settings.sh

          cd ./package

          $GITHUB_WORKSPACE/Scripts/Plugins.sh

      - name: 自定义设置
        run: |
          cd ./owrt

          rm -rf ./tmp* ./.config*
          cat $GITHUB_WORKSPACE/Ax6-6.1-immortalwrt.config >> .config

          $GITHUB_WORKSPACE/Scripts/Extras.sh
          make defconfig

      - name: 清理Toolchain
        run: |
          cd ./owrt

          make dirclean
          
      - name: Cache 缓存加速(7天内对应源码相同机型二次编译有效，每次只保留一个源码的缓存)
        uses: stupidloud/cachewrtbuild@main
        continue-on-error: true
        if: env.USE_CACHEWRTBUILD == 'true'
        with:
          ccache: true
          prefix: ${{ github.workspace }}/owrt

      - name: 下载编译依赖
        run: |
          cd ./owrt
          make download -j$(nproc)

      - name: 编译固件
        run: |
          cd ./owrt

          make -j$(nproc) || make -j1 V=s

          echo "======================="
          df -h
          echo "======================="
          du -h --max-depth=1
          echo "======================="

      - name: 整理固件
        run: |
          cd ./owrt && mkdir ./upload

          rm -rf $(find ./bin/targets/ -iregex ".*\(json\|manifest\|buildinfo\|sha256sums\|packages\)$")
          cp -rf $(find ./bin/targets/ -type f -iname "*.*") ./upload/
          cp -rf ./.config ./upload/Config_"$OWRT_TARGET"_"$OWRT_SOURCE"_"$OWRT_DATE".txt

          cd ./upload

          $GITHUB_WORKSPACE/Scripts/Renames.sh

      - name: 生成固件标签
        uses: softprops/action-gh-release@master
        with:
          tag_name: ${{env.OWRT_TARGET}}_${{env.OWRT_SOURCE}}_${{env.OWRT_DATE}}
          files: ./owrt/upload/*.*
          body: |
            这个是作者自用设备固件！
            如果需要就拿去使用！

            源码：${{env.OWRT_SOURCE}}
            平台：${{env.OWRT_TARGET}}
            设备：${{env.OWRT_TYPE}}
            密码：${{env.OWRT_PW}}
            地址：${{env.OWRT_IP}}

      - name: 清理Releases
        uses: dev-drprasad/delete-older-releases@master
        with:
          keep_latest: 6
          delete_tags: true

      - name: 清理Workflows
        uses: Mattraks/delete-workflow-runs@main
        with:
          retain_days: 0
          keep_minimum_runs: 1